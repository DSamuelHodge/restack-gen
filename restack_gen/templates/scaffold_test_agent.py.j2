"""Tests for {{ agent_name }}."""
# @generated by restack-gen
import pytest
from {{ project_name }}.agents.{{ module_name }} import {{ agent_name }}
from {{ project_name }}.common.{{ import_model_module }} import {{ model_name }}


@pytest.fixture
def agent():
    """Create agent instance for testing."""
    return {{ agent_name }}()


@pytest.fixture
def sample_event():
    """Create a sample event for testing."""
    return {{ model_name }}(
        request_id="test-123",
        input_data="Sample input data for testing",
        status="Pending"
    )


@pytest.mark.asyncio
async def test_process_task(agent, sample_event):
    """Test the process_task method."""
    result = await agent.process_task(sample_event)
    
    assert result.request_id == "test-123"
    assert result.status == "Completed"
    assert result.input_data == "Sample input data for testing"


@pytest.mark.asyncio
async def test_process_task_updates_status(agent, sample_event):
    """Test that process_task updates status correctly."""
    initial_status = sample_event.status
    assert initial_status == "Pending"
    
    result = await agent.process_task(sample_event)
    
    assert result.status != initial_status
    assert result.status == "Completed"
