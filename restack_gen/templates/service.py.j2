# @generated by restack-gen v{{ generator_version }} ({{ timestamp }})
# command: {{ command }}
"""{{ project_name }} Restack service."""

import asyncio

from restack_ai import Restack

from {{ project_name }}.common.settings import settings
{% if agents %}
# Agents
{%- for agent in agents %}
from {{ project_name }}.agents.{{ agent.module }} import {{ agent.class_name }}
{%- endfor %}
{% endif %}
{% if workflows %}
# Workflows
{%- for workflow in workflows %}
from {{ project_name }}.workflows.{{ workflow.module }} import {{ workflow.class_name }}
{%- endfor %}
{% endif %}
{% if functions %}
# Functions
{%- for function in functions %}
from {{ project_name }}.functions.{{ function.module }} import {{ function.name }}
{%- endfor %}
{% endif %}


async def main() -> None:
    """Start Restack service with all registered resources."""
    client = Restack()

    # Register all workflows and functions
    await client.start_service(
        workflows=[
{%- for agent in agents %}
            {{ agent.class_name }},
{%- endfor %}
{%- for workflow in workflows %}
            {{ workflow.class_name }},
{%- endfor %}
        ],
        functions=[
{%- for function in functions %}
            {{ function.name }},
{%- endfor %}
        ],
        task_queue="{{ task_queue }}",
    )


if __name__ == "__main__":
    asyncio.run(main())
