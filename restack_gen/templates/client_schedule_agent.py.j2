# @generated by restack-gen v{{ generator_version }} ({{ timestamp }})
# command: {{ command }}
"""Client script to schedule {{ agent_name }} agent."""

import asyncio
from restack_ai import Restack

from {{ project_name }}.agents.{{ agent_module }} import {{ agent_name }}, {{ agent_name }}State


async def main() -> None:
    """Schedule {{ agent_name }} agent."""
    client = Restack()

    # Create initial state
    initial_state = {{ agent_name }}State(
        # TODO: Set initial state fields
    )

    # Schedule agent
    workflow_id = "{{ agent_id }}"
    run_id = await client.schedule_workflow(
        workflow={{ agent_name }},
        workflow_id=workflow_id,
        input=initial_state,
        task_queue="{{ task_queue }}",
    )

    print(f"Scheduled {{ agent_name }}: workflow_id={workflow_id}, run_id={run_id}")

    # TODO: Send events to agent
    # await client.send_workflow_signal(
    #     workflow_id=workflow_id,
    #     signal="{{ agent_name }}.handle_event",
    #     input={"event": "some_event", "payload": {}},
    # )


if __name__ == "__main__":
    asyncio.run(main())
