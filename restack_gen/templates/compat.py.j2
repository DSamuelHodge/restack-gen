# @generated by restack-gen v{{ generator_version }} ({{ timestamp }})
# command: {{ command }}
"""Pydantic v1/v2 compatibility shim for {{ project_name }}."""

import yaml

try:
    from pydantic.v1 import BaseModel as V1BaseModel, Field as V1Field
    from pydantic.v1.env_settings import BaseSettings as V1BaseSettings

    PYDANTIC_V2 = False
except ImportError:
    try:
        from pydantic import BaseModel as V2BaseModel, Field as V2Field
        from pydantic_settings import BaseSettings as V2BaseSettings

        PYDANTIC_V2 = True
    except ImportError:
        raise ImportError("Pydantic is not installed")


if PYDANTIC_V2:

    class BaseModel(V2BaseModel):
        """Pydantic v2 BaseModel with YAML support."""

        @classmethod
        def from_yaml(cls, path):
            """Load model from YAML file."""
            with open(path) as f:
                data = yaml.safe_load(f)
            return cls(**data) if data else cls()

    class SettingsBase(V2BaseSettings):
        """Pydantic v2 BaseSettings with YAML support."""

        @classmethod
        def from_yaml(cls, path):
            """Load settings from YAML file."""
            with open(path) as f:
                data = yaml.safe_load(f)
            return cls(**data) if data else cls()

    Field = V2Field

else:

    class BaseModel(V1BaseModel):
        """Pydantic v1 BaseModel with YAML support."""

        @classmethod
        def from_yaml(cls, path):
            """Load model from YAML file."""
            with open(path) as f:
                data = yaml.safe_load(f)
            return cls(**data) if data else cls()

    class SettingsBase(V1BaseSettings):
        """Pydantic v1 BaseSettings with YAML support."""

        @classmethod
        def from_yaml(cls, path):
            """Load settings from YAML file."""
            with open(path) as f:
                data = yaml.safe_load(f)
            return cls(**data) if data else cls()

        class Config:
            """Settings configuration."""

            env_file = ".env"
            env_file_encoding = "utf-8"

    Field = V1Field


__all__ = ["BaseModel", "SettingsBase", "Field", "PYDANTIC_V2"]
