[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "restack-gen"
version = "2.0.0"
description = "Rails-style scaffolding CLI for Restack agents, workflows, and pipelines with LLM + Tools"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
authors = [
    {name = "Restack Team", email = "team@restack.io"},
]
keywords = ["restack", "agents", "workflows", "scaffolding", "cli", "code-generation", "llm", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "typer[all]>=0.12.0",
    "jinja2>=3.1.0",
    "pydantic>=2.7.0",
    "pydantic-settings>=2.2.0",
    "pyyaml>=6.0.1",
    "rich>=13.0.0",
    "click>=8.1.0",
    "httpx>=0.27.0",
    "structlog>=24.1.0",
    "restack-ai",
    "fastmcp>=2.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.4.0",
    "black>=24.0.0",
    "mypy>=1.9.0",
    "pre-commit>=3.7.0",
    "types-pyyaml>=6.0.0",
    "hatchling>=1.21.0",
    "respx>=0.21.0",
]
console = [
    "ipython>=8.0.0",
]

[project.scripts]
restack = "restack_gen.cli:app"

[project.urls]
Homepage = "https://github.com/restackio/restack-gen"
Documentation = "https://github.com/restackio/restack-gen/tree/main/docs"
Repository = "https://github.com/restackio/restack-gen"
"Bug Tracker" = "https://github.com/restackio/restack-gen/issues"

[tool.hatch.build.targets.wheel]
packages = ["restack_gen"]

[tool.hatch.build.targets.sdist]
include = [
    "/restack_gen",
    "/tests",
    "/docs",
    "/examples",
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"client/**/*.py" = ["F821"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true
exclude = '^((examples|test_env|tests|client)/|setup_jira_integration\.py$)'

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=restack_gen",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["restack_gen"]
branch = true
omit = [
    "tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
